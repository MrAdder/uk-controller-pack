name: Create ZIP on Release

on:
  release:
    types: [published]

jobs:
  create-full-zip:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create full ZIP
      run: |
        zip -r full_release_${{ github.event.release.tag_name }}.zip .

    - name: Upload full ZIP as release asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./full_release_${{ github.event.release.tag_name }}.zip
        asset_name: full_release_${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip

  create-changes-only-zip:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Fetch all history for accurate comparison

    - name: Get the last release tag
      id: get_last_release
      run: |
        last_release=$(git describe --tags --abbrev=0 HEAD^)
        echo "::set-output name=tag::$last_release"

    - name: Create changes only ZIP
      id: create_zip
      run: |
        # Get the release tag
        release_tag=${{ github.event.release.tag_name }}
        
        # Copy README from docs folder
        cp docs/README.md README.md
        
        # Get the list of changed files since the last release
        git diff --diff-filter=d --name-only ${{ steps.get_last_release.outputs.tag }}..HEAD | grep -v '\.py$' > changed_files.txt
        
        # Filter out .prf files with only sector file location line changed
        while IFS= read -r file; do
          if [[ "$file" == *.prf ]]; then
            if [ $(git diff ${{ steps.get_last_release.outputs.tag }}..HEAD "$file" | wc -l) -le 2 ]; then
              continue
            fi
          fi
          echo "$file" >> filtered_files.txt
        done < changed_files.txt
        
        # Create the ZIP file with the changes
        zip -@ "changes_only_${release_tag}.zip" < filtered_files.txt

    - name: Upload changes only ZIP as release asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./changes_only_${{ github.event.release.tag_name }}.zip
        asset_name: changes_only_${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip
