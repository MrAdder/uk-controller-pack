name: Create ZIPs on Release

on:
  release:
    types: [published]

jobs:
  create-full-zip:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Copy README from docs folder
        run: |
          cp _docs/README.pdf UK/README.pdf
      - name: Get release tag
        id: get_release_tag
        run: |
          echo "::set-output name=tag::${{ github.event.release.tag_name }}"
      - name: Create full ZIP
        run: |
          zip -r "uk_controller_pack_${{ steps.get_release_tag.outputs.tag }}.zip" UK/ -x "*.py"
      - name: Upload ZIP as release asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            uk_controller_pack_${{ steps.get_release_tag.outputs.tag }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-changes-only-zip:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Fetch all history for accurate comparison

    - name: Get the last release tag
      id: get_last_release
      run: |
        last_release=$(git describe --tags --abbrev=0 HEAD^)
        echo "::set-output name=tag::$last_release"

    - name: Create changes only ZIP
      id: create_zip
      run: |
        # Get the release tag
        release_tag=${{ github.event.release.tag_name }}
        
        # Copy README from docs folder
        cp _docs/README.pdf UK/README.pdf
        
        # Get the list of changed files since the last release
        git diff --diff-filter=d --name-only ${{ steps.get_last_release.outputs.tag }}..HEAD | grep -v '\.py$' > changed_files.txt
        
        # Filter out .prf files with only sector file location line changed
        while IFS= read -r file; do
          if [[ "$file" == *.prf ]]; then
            if [ $(git diff ${{ steps.get_last_release.outputs.tag }}..HEAD "$file" | wc -l) -le 1 ]; then
              continue
            fi
          fi
          echo "$file" >> filtered_files.txt
        done < changed_files.txt
        
        # Create the ZIP file with the changes
        zip -@ "changes_only_${release_tag}.zip" < filtered_files.txt

    - name: Upload changes only ZIP as release asset
      uses: actions/upload-release-asset@v1
      with:
        files: |
            uk_controller_pack_changes_only_${{ steps.get_release_tag.outputs.tag }}.zip
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
